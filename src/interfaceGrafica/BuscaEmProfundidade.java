/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaceGrafica;

import grafos.AlgoritmosGrafos;
import grafos.Aresta;
import grafos.Grafo;
import grafos.TipoDeRepresentacao;

import static grafos.TipoDeRepresentacao.*;
import java.util.Set;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tribi
 */
public class BuscaEmProfundidade extends javax.swing.JFrame {

    /**
     * Creates new form BuscaEmProfundidade
     */
    AlgoritmosGrafos a;
    Grafo g;
    grafos.BuscaEmProfundidade b;

    public BuscaEmProfundidade(String path, TipoDeRepresentacao t) throws Exception {

        initComponents();
        this.setLocationRelativeTo(null);
        setExtendedState(MAXIMIZED_BOTH);

        a = new AlgoritmosGrafos();
        g = a.carregarGrafo(path, t);
        b = new grafos.BuscaEmProfundidade();
        b.dfs(g);

        setNumVertices(Integer.toString(g.numeroDeVertices()));
        setNumArestas(Integer.toString(g.numeroDeArestas()));
        setExisteCiclo();
        populaDFS();
        populaArestaArvore();
        populaArestaRetorno();
        populaArestaAvanco();
        populaArestaCruzamento();
        System.out.println("");
        b.escreveArestas(b.arestasDeArvore(g));

    }

    public void setExisteCiclo() {
        if(b.arestasDeRetorno(g).size()>0){
            jLabelExisteCiclo.setText("Existe ciclo!");
            
        }else{
            jLabelExisteCiclo.setText("Não existe ciclo!");
        }
    }

    public void populaDFS() {
        DefaultTableModel table = (DefaultTableModel) jTableDFS.getModel();
        int o, d;
        for (int i = 0; i < g.numeroDeVertices(); i++) {
            o = b.tempoDeDescoberta(i);
            d = b.tempoDeFinalizacao(i);
            table.addRow(new Integer[]{i, o, d});

        }
    }

    public void populaArestaArvore() {
        DefaultTableModel table = (DefaultTableModel) jTableArestaArvore.getModel();
        for (Aresta a : b.arestasDeArvore(g)) {
            table.addRow(new Integer[]{a.getOrigem(), a.getDestino()});
        }
    }

    public void populaArestaRetorno() {
        DefaultTableModel table = (DefaultTableModel) jTableArestasRetorno.getModel();
        
        for (Aresta a : b.arestasDeRetorno(g)) {
            table.addRow(new Integer[]{a.getOrigem(), a.getDestino()});
        }
    }

    public void populaArestaAvanco() {
        DefaultTableModel table = (DefaultTableModel) jTableArestaAvanco.getModel();
        for (Aresta a : b.arestasDeAvanco(g)) {
            table.addRow(new Integer[]{a.getOrigem(), a.getDestino()});
        }
    }

    public void populaArestaCruzamento() {
        DefaultTableModel table = (DefaultTableModel) jTableArestaCruzamento.getModel();
        for (Aresta a : b.arestasDeCruzamento(g)) {
            table.addRow(new Integer[]{a.getOrigem(), a.getDestino()});
        }
    }

    public void setNumVertices(String n) {
        jLabelNumVertices.setText(n);
    }

    public void setNumArestas(String n) {
        jLabelNumArestas.setText(n);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelNumVertices = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelNumArestas = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDFS = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableArestaArvore = new javax.swing.JTable();
        jLabel5asd = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableArestasRetorno = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableArestaAvanco = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableArestaCruzamento = new javax.swing.JTable();
        jLabelExisteCiclo = new javax.swing.JLabel();
        jTextOrigemExisteAresta = new javax.swing.JTextField();
        jTextDestinoExisteAresta = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabelExisteAresta = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Número de Vértices:");

        jLabel2.setText("Número de Arestas:");

        jLabel3.setText("Resultados da DFS");

        jTableDFS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Vértice", " Descoberta", "Finalização"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDFS.setColumnSelectionAllowed(true);
        jTableDFS.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableDFS);
        jTableDFS.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTableDFS.getColumnModel().getColumnCount() > 0) {
            jTableDFS.getColumnModel().getColumn(0).setResizable(false);
            jTableDFS.getColumnModel().getColumn(1).setResizable(false);
            jTableDFS.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel4.setText("Arestas de Árvore");

        jTableArestaArvore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Origem", "Destino"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableArestaArvore);
        if (jTableArestaArvore.getColumnModel().getColumnCount() > 0) {
            jTableArestaArvore.getColumnModel().getColumn(0).setResizable(false);
            jTableArestaArvore.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel5asd.setText("Arestas de Retorno");

        jTableArestasRetorno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Origem", "Destino"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableArestasRetorno);
        if (jTableArestasRetorno.getColumnModel().getColumnCount() > 0) {
            jTableArestasRetorno.getColumnModel().getColumn(0).setResizable(false);
            jTableArestasRetorno.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel5.setText("Arestas de Avanço");

        jTableArestaAvanco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Origem", "Destino"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTableArestaAvanco);
        if (jTableArestaAvanco.getColumnModel().getColumnCount() > 0) {
            jTableArestaAvanco.getColumnModel().getColumn(0).setResizable(false);
            jTableArestaAvanco.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel6.setText("Arestas de Cruzamento");

        jTableArestaCruzamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Origem", "Destino"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTableArestaCruzamento);
        if (jTableArestaCruzamento.getColumnModel().getColumnCount() > 0) {
            jTableArestaCruzamento.getColumnModel().getColumn(0).setResizable(false);
            jTableArestaCruzamento.getColumnModel().getColumn(1).setResizable(false);
        }

        jButton1.setText("Verificar Aresta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5asd)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jLabelExisteCiclo)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelNumVertices)
                                .addGap(51, 51, 51)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelNumArestas))
                            .addComponent(jLabel3))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextOrigemExisteAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextDestinoExisteAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jLabelExisteAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 303, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelNumVertices)
                    .addComponent(jLabel2)
                    .addComponent(jLabelNumArestas))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextOrigemExisteAresta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextDestinoExisteAresta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelExisteAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5asd))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabelExisteCiclo))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(367, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int origem, destino;
        origem = Integer.parseInt(jTextOrigemExisteAresta.getText());
        destino = Integer.parseInt(jTextDestinoExisteAresta.getText());
        boolean existe;
        existe = g.existeAresta(origem, destino);
        if(existe){
            jLabelExisteAresta.setText("Existe aresta!");
            
        }else{
            jLabelExisteAresta.setText("Não existe aresta!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscaEmProfundidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscaEmProfundidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscaEmProfundidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscaEmProfundidade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel5asd;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelExisteAresta;
    private javax.swing.JLabel jLabelExisteCiclo;
    private javax.swing.JLabel jLabelNumArestas;
    private javax.swing.JLabel jLabelNumVertices;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTableArestaArvore;
    private javax.swing.JTable jTableArestaAvanco;
    private javax.swing.JTable jTableArestaCruzamento;
    private javax.swing.JTable jTableArestasRetorno;
    private javax.swing.JTable jTableDFS;
    private javax.swing.JTextField jTextDestinoExisteAresta;
    private javax.swing.JTextField jTextOrigemExisteAresta;
    // End of variables declaration//GEN-END:variables
}
